/*
  LPS test results file generated on 2018-2-28 at 16:56:36
  on Prolog swi(7,7,2,[]) for program file:
  /Users/mc/git/logicalcontracts/examples/forTesting/bankTransfer2.lps_.P
*/

:-dynamic lps_test_result/3,lps_test_result_item/3,lps_test_action_ancestor/3,lps_test_options/1.

% LPS options prior to the test:
lps_test_options([dc]).

% lps_test_result(Stage,Cycle,TestTerm)
lps_test_result(fluents,0,2).
lps_test_result(events,1,0).
lps_test_result(fluents,1,2).
lps_test_result(events,2,1).
lps_test_result(fluents,2,2).
lps_test_result(events,3,1).
lps_test_result(fluents,3,2).
lps_test_result(events,4,1).
lps_test_result(fluents,4,2).
lps_test_result(events,5,1).
lps_test_result(fluents,5,2).
lps_test_result(events,6,1).
lps_test_result(fluents,6,2).
lps_test_result(events,7,1).
lps_test_result(fluents,7,2).
lps_test_result(events,8,1).
lps_test_result(fluents,8,2).
lps_test_result(events,9,1).
lps_test_result(fluents,9,2).
lps_test_result(events,10,1).
lps_test_result(fluents,10,2).
lps_test_result(events,11,1).
lps_test_result(fluents,11,2).
lps_test_result(events,12,1).
lps_test_result(fluents,12,2).
lps_test_result(events,13,1).
lps_test_result(fluents,13,2).
lps_test_result(events,14,1).
lps_test_result(fluents,14,2).
lps_test_result(events,15,1).
lps_test_result(fluents,15,2).
lps_test_result(events,16,1).
lps_test_result(fluents,16,2).
lps_test_result(events,17,1).
lps_test_result(fluents,17,2).
lps_test_result(events,18,1).
lps_test_result(fluents,18,2).
lps_test_result(events,19,1).
lps_test_result(fluents,19,2).
lps_test_result(events,20,1).
lps_test_result(fluents,20,2).
lps_test_result(events,21,1).
lps_test_result(fluents,21,2).
lps_test_result(events,22,0).
lps_test_result(fluents,22,2).
lps_test_result(events,23,0).
lps_test_result(fluents,23,2).
lps_test_result(events,24,0).
lps_test_result(fluents,24,2).
lps_test_result(events,25,0).
lps_test_result(fluents,25,2).
lps_test_result(events,26,0).
lps_test_result(fluents,26,2).
lps_test_result(events,27,0).
lps_test_result(fluents,27,2).
lps_test_result(events,28,0).
lps_test_result(fluents,28,2).
lps_test_result(events,29,0).
lps_test_result(fluents,29,2).
lps_test_result(events,30,0).
lps_test_result(fluents,30,2).
% lps_test_result_item(Stage,Cycle,TestTerm)
lps_test_result_item(fluents,0,balance(bob,0)).
lps_test_result_item(fluents,0,balance(fariba,100)).
lps_test_result_item(fluents,1,balance(bob,0)).
lps_test_result_item(fluents,1,balance(fariba,100)).
lps_test_result_item(events,2,transfer(fariba,bob,10)).
lps_test_result_item(fluents,2,balance(bob,10)).
lps_test_result_item(fluents,2,balance(fariba,90)).
lps_test_result_item(events,3,transfer(bob,fariba,10)).
lps_test_result_item(fluents,3,balance(fariba,100)).
lps_test_result_item(fluents,3,balance(bob,0)).
lps_test_result_item(events,4,transfer(fariba,bob,20)).
lps_test_result_item(fluents,4,balance(bob,20)).
lps_test_result_item(fluents,4,balance(fariba,80)).
lps_test_result_item(events,5,transfer(bob,fariba,10)).
lps_test_result_item(fluents,5,balance(fariba,90)).
lps_test_result_item(fluents,5,balance(bob,10)).
lps_test_result_item(events,6,transfer(fariba,bob,20)).
lps_test_result_item(fluents,6,balance(bob,30)).
lps_test_result_item(fluents,6,balance(fariba,70)).
lps_test_result_item(events,7,transfer(bob,fariba,10)).
lps_test_result_item(fluents,7,balance(fariba,80)).
lps_test_result_item(fluents,7,balance(bob,20)).
lps_test_result_item(events,8,transfer(fariba,bob,20)).
lps_test_result_item(fluents,8,balance(bob,40)).
lps_test_result_item(fluents,8,balance(fariba,60)).
lps_test_result_item(events,9,transfer(bob,fariba,10)).
lps_test_result_item(fluents,9,balance(fariba,70)).
lps_test_result_item(fluents,9,balance(bob,30)).
lps_test_result_item(events,10,transfer(fariba,bob,20)).
lps_test_result_item(fluents,10,balance(bob,50)).
lps_test_result_item(fluents,10,balance(fariba,50)).
lps_test_result_item(events,11,transfer(bob,fariba,10)).
lps_test_result_item(fluents,11,balance(fariba,60)).
lps_test_result_item(fluents,11,balance(bob,40)).
lps_test_result_item(events,12,transfer(fariba,bob,20)).
lps_test_result_item(fluents,12,balance(bob,60)).
lps_test_result_item(fluents,12,balance(fariba,40)).
lps_test_result_item(events,13,transfer(bob,fariba,10)).
lps_test_result_item(fluents,13,balance(fariba,50)).
lps_test_result_item(fluents,13,balance(bob,50)).
lps_test_result_item(events,14,transfer(fariba,bob,20)).
lps_test_result_item(fluents,14,balance(bob,70)).
lps_test_result_item(fluents,14,balance(fariba,30)).
lps_test_result_item(events,15,transfer(bob,fariba,10)).
lps_test_result_item(fluents,15,balance(fariba,40)).
lps_test_result_item(fluents,15,balance(bob,60)).
lps_test_result_item(events,16,transfer(fariba,bob,20)).
lps_test_result_item(fluents,16,balance(bob,80)).
lps_test_result_item(fluents,16,balance(fariba,20)).
lps_test_result_item(events,17,transfer(bob,fariba,10)).
lps_test_result_item(fluents,17,balance(fariba,30)).
lps_test_result_item(fluents,17,balance(bob,70)).
lps_test_result_item(events,18,transfer(fariba,bob,20)).
lps_test_result_item(fluents,18,balance(bob,90)).
lps_test_result_item(fluents,18,balance(fariba,10)).
lps_test_result_item(events,19,transfer(bob,fariba,10)).
lps_test_result_item(fluents,19,balance(fariba,20)).
lps_test_result_item(fluents,19,balance(bob,80)).
lps_test_result_item(events,20,transfer(fariba,bob,20)).
lps_test_result_item(fluents,20,balance(bob,100)).
lps_test_result_item(fluents,20,balance(fariba,0)).
lps_test_result_item(events,21,transfer(bob,fariba,10)).
lps_test_result_item(fluents,21,balance(fariba,10)).
lps_test_result_item(fluents,21,balance(bob,90)).
lps_test_result_item(fluents,22,balance(fariba,10)).
lps_test_result_item(fluents,22,balance(bob,90)).
lps_test_result_item(fluents,23,balance(fariba,10)).
lps_test_result_item(fluents,23,balance(bob,90)).
lps_test_result_item(fluents,24,balance(fariba,10)).
lps_test_result_item(fluents,24,balance(bob,90)).
lps_test_result_item(fluents,25,balance(fariba,10)).
lps_test_result_item(fluents,25,balance(bob,90)).
lps_test_result_item(fluents,26,balance(fariba,10)).
lps_test_result_item(fluents,26,balance(bob,90)).
lps_test_result_item(fluents,27,balance(fariba,10)).
lps_test_result_item(fluents,27,balance(bob,90)).
lps_test_result_item(fluents,28,balance(fariba,10)).
lps_test_result_item(fluents,28,balance(bob,90)).
lps_test_result_item(fluents,29,balance(fariba,10)).
lps_test_result_item(fluents,29,balance(bob,90)).
lps_test_result_item(fluents,30,balance(fariba,10)).
lps_test_result_item(fluents,30,balance(bob,90)).
% lps_test_action_ancestor(Call,T1,T2)
