/*
  LPS test results file generated on 2018-2-28 at 16:56:5
  on Prolog swi(7,7,2,[]) for program file:
  /Users/mc/git/logicalcontracts/examples/forTesting/bankTransfer1.lps_.P
*/

:-dynamic lps_test_result/3,lps_test_result_item/3,lps_test_action_ancestor/3,lps_test_options/1.

% LPS options prior to the test:
lps_test_options([dc]).

% lps_test_result(Stage,Cycle,TestTerm)
lps_test_result(fluents,0,2).
lps_test_result(events,1,0).
lps_test_result(fluents,1,2).
lps_test_result(events,2,1).
lps_test_result(fluents,2,2).
lps_test_result(events,3,1).
lps_test_result(fluents,3,2).
lps_test_result(events,4,1).
lps_test_result(fluents,4,2).
lps_test_result(events,5,1).
lps_test_result(fluents,5,2).
lps_test_result(events,6,1).
lps_test_result(fluents,6,2).
lps_test_result(events,7,1).
lps_test_result(fluents,7,2).
lps_test_result(events,8,1).
lps_test_result(fluents,8,2).
lps_test_result(events,9,1).
lps_test_result(fluents,9,2).
% lps_test_result_item(Stage,Cycle,TestTerm)
lps_test_result_item(fluents,0,balance(bob,0)).
lps_test_result_item(fluents,0,balance(fariba,100)).
lps_test_result_item(fluents,1,balance(bob,0)).
lps_test_result_item(fluents,1,balance(fariba,100)).
lps_test_result_item(events,2,transfer(fariba,bob,10)).
lps_test_result_item(fluents,2,balance(bob,10)).
lps_test_result_item(fluents,2,balance(fariba,90)).
lps_test_result_item(events,3,transfer(bob,fariba,10)).
lps_test_result_item(fluents,3,balance(fariba,100)).
lps_test_result_item(fluents,3,balance(bob,0)).
lps_test_result_item(events,4,transfer(fariba,bob,20)).
lps_test_result_item(fluents,4,balance(bob,20)).
lps_test_result_item(fluents,4,balance(fariba,80)).
lps_test_result_item(events,5,transfer(bob,fariba,10)).
lps_test_result_item(fluents,5,balance(fariba,90)).
lps_test_result_item(fluents,5,balance(bob,10)).
lps_test_result_item(events,6,transfer(fariba,bob,20)).
lps_test_result_item(fluents,6,balance(bob,30)).
lps_test_result_item(fluents,6,balance(fariba,70)).
lps_test_result_item(events,7,transfer(bob,fariba,10)).
lps_test_result_item(fluents,7,balance(fariba,80)).
lps_test_result_item(fluents,7,balance(bob,20)).
lps_test_result_item(events,8,transfer(fariba,bob,20)).
lps_test_result_item(fluents,8,balance(bob,40)).
lps_test_result_item(fluents,8,balance(fariba,60)).
lps_test_result_item(events,9,transfer(bob,fariba,10)).
lps_test_result_item(fluents,9,balance(fariba,70)).
lps_test_result_item(fluents,9,balance(bob,30)).
% lps_test_action_ancestor(Call,T1,T2)
